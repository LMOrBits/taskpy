[project]
name = "taskpy"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [{ name = "parsa", email = "parsa.miraghaie@gmail.com" }]
requires-python = ">=3.12"
dependencies = ["go-task-bin>=3.43.3", "loguru>=0.7.3"]

[project.scripts]
taskpy = "taskpy:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.ruff]
line-length = 120
target-version = "py39"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "YTT",  # flake8-2020
    "S",    # flake8-bandit
    "DTZ",  # flake8-datetimez,
    "E4",
    "E7",
    "E9",
    "F",
    "E302",
]
ignore = [
    "E501", # line too long, handled by formatter
]
fixable = ["ALL"]
unfixable = []
isort.known-first-party = ["data", "ml", "orchestration"]
isort.section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]
# isort.combine-as-imports = false
isort.lines-between-types = 1
isort.no-lines-before = ["future", "standard-library"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"
